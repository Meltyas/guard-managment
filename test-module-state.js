// Test script para verificar el estado del m√≥dulo
// Ejecutar en la consola de Foundry despu√©s de cargar el m√≥dulo

console.log('=== Guard Management Module Test ===');

// Verificar si el m√≥dulo est√° disponible
const gm = window.GuardManagement;
if (!gm) {
  console.error('‚ùå GuardManagement no est√° disponible en window');
} else {
  console.log('‚úÖ GuardManagement disponible:', gm);
}

// Verificar documentManager
if (gm?.documentManager) {
  console.log('‚úÖ DocumentManager disponible');
  
  // Verificar organizaciones existentes
  const orgs = gm.documentManager.getGuardOrganizations();
  console.log('üìã Organizaciones encontradas:', orgs.length);
  
  if (orgs.length === 0) {
    console.log('‚ö†Ô∏è No hay organizaciones. Creando datos de ejemplo...');
    gm.documentManager.createSampleData().then(() => {
      console.log('‚úÖ Datos de ejemplo creados');
      const newOrgs = gm.documentManager.getGuardOrganizations();
      console.log('üìã Organizaciones despu√©s de crear ejemplo:', newOrgs.length);
      newOrgs.forEach((org, index) => {
        console.log(`  ${index + 1}. ${org.name} (${org.id})`);
      });
    });
  } else {
    console.log('üìã Organizaciones existentes:');
    orgs.forEach((org, index) => {
      console.log(`  ${index + 1}. ${org.name} (${org.id})`);
    });
  }
} else {
  console.error('‚ùå DocumentManager no disponible');
}

// Verificar floating panel
if (gm?.floatingPanel) {
  console.log('‚úÖ FloatingPanel disponible');
} else {
  console.error('‚ùå FloatingPanel no disponible');
}

// Verificar game.actors
if (game?.actors) {
  console.log('‚úÖ game.actors disponible');
  const guardActors = game.actors.filter(actor => actor.type?.includes('guard-management'));
  console.log('üõ°Ô∏è Guard actors encontrados:', guardActors.length);
  guardActors.forEach((actor, index) => {
    console.log(`  ${index + 1}. ${actor.name} (${actor.type})`);
  });
} else {
  console.error('‚ùå game.actors no disponible');
}

console.log('=== Fin Test ===');
